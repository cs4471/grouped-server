Feature :
Create a new group

URL : 	POST
/groups/new

Parameters :
	None

Return :
{
       “id”: INT (Newly created unique group id)
}


Feature :
	Create a new group with info, or update an existing one.

URL : POST
       /groups/new

Parameters :
{
	“id”: INT (if not included new one is created and returned),
	“name”: STRING (Name of the group),
       “event”: STRING (Name of the event),
       “length”: STRING(Length in hours ? TBD),
       “roam”: STRING(meters someone can roam from group)
}

Return :
if successful :	
{
	“id”: INT (the unique id of the created/updated group)
}
else :
{
	“error”: INT (ERROR ID #, TO BE DOCUMENTED)
}

Feature :
Join A Group. Member id is included if one has previously been assigned by server (through this feature).

URL : POST
/groups/join

Parameters :
{
	“id”: INT (unique group id),
	“member_id”: INT (included if the user already has been assigned one)
}

Return :
if successful :	
{
	“id”: INT (a unique member id)
	“group_id”: INT (unique group id that member was added to)
}
else :
{
	“error”: INT (error id #, these will be documented)
}

Feature :
Deactivate A Group

URL : DELETE
/groups/delete

Parameters :
{
	“id”: INT (unique group id)
}

Return :
if successful :	
{
	“id”: INT (the unique group id of the deleted group)
}
else :
{
	“error”: INT (error id #, these will be documented)
}

Feature :
Update a group members info

URL :  POST
/checkins/new

Parameters :
{
	“id”: INT (unique member id),
	“nickname”: STRING (nickname for member),
	“status”: STRING (description of current status),
       “lat”: STRING,
       “lng”: STRING,
       “certainty”: STRING	
}

Return :
if successful :	
{
	“id”: INT (the unique id of the newly created checkin)
}
else :
{
	“error”: INT (error id #, these will be documented)
}


Feature :
Fetch recent updates. If no checkin id is specified, all most recent checkins for group members will be returned.

URL :  GET
/checkins/get

Parameters :
{
	“group_id”: INT (unique group id),
	“checkin_id”: INT (id of last checkin fetched)	
}

Return :
if successful :	
{
	“checkins”: [
		{
			“id”: INT (unique checkin id),
			“member_id”: INT (unique member id),
              	“nickname”: STRING (nickname for member),
              	“status”: STRING (description of current status),
              	“location”: {
                            “lat”: STRING,
                            	“lng”: STRING,
                            	“certainty”: STRING
                     }
		}
		……..,.
	]
}
else :
{
	“error”: INT (error id #, these will be documented)
}

Feature :
Send a new message to the group.

URL :  POST
/messages/new

Parameters :
{
	“id”: INT (unique member id),
	“group_id”: INT (if in multiple groups must specify this),
	“message”: STRING
}

Return :
if successful :	
{
	“id”: INT (unique id of newly created message)
}
else :
{
	“error”: INT (error id #, these will be documented)
}

Feature :
Fetch group messages

URL :  GET
/messages/get

Parameters :
{
	“group_id”: INT (unique group id),
	“message_id”: INT (id of last message fetched)	
}

Return :
if successful :	
{
	“messages”: [
		{
			“id”: INT (unique message id),
              	“member_id”: INT(unique member id),
              	“message”: STRING
		}
		……..,.
	]
}
else :
{
	“error”: INT (error id #, these will be documented)
}

